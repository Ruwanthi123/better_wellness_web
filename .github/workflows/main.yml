name: Better Wellness CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.18]
    environment: better-wellness
    env:
      DOCKER_REPO_URL: 750471540463.dkr.ecr.eu-north-1.amazonaws.com
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      KUBE_NAMESPACE: better-wellness

    steps:
    - uses: actions/checkout@v4

    - name: Set up Deployment Environment
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build Artifacts
      run: mvn clean install -DskipTests

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Print Docker Repository URL
      env:
        DOCKER_REPO_URL: 750471540463.dkr.ecr.eu-north-1.amazonaws.com
      run: |
        echo "DOCKER_REPO_URL = $DOCKER_REPO_URL"
    

    - name: Build and Push Docker Images, Create Stack, Upload S3 Files
      run: |
        set -e

        if aws cloudformation describe-stacks --stack-name better-wellness-live --region $AWS_REGION >/dev/null 2>&1; then
          echo "Stack better-wellness-live already exists. Updating the stack."          
        else
          echo "Stack better-wellness-live does not exist. Creating stack..."
          aws cloudformation create-stack --stack-name better-wellness-live --template-body file://amazon-eks.yaml --capabilities CAPABILITY_NAMED_IAM --region $AWS_REGION
          aws cloudformation wait stack-create-complete --stack-name better-wellness-live --region $AWS_REGION
        fi
        
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REPO_URL       

        CURRENT_DATETIME=$(date +'%Y%m%d%H%M%S')
        echo "CURRENT_DATETIME=$CURRENT_DATETIME" >> $GITHUB_ENV

        for SERVICE_NAME in message-service profile-service; do
          cd $SERVICE_NAME
          docker build -t $SERVICE_NAME:$CURRENT_DATETIME .
          docker tag $SERVICE_NAME:$CURRENT_DATETIME $DOCKER_REPO_URL/$SERVICE_NAME:$CURRENT_DATETIME
          docker tag $SERVICE_NAME:$CURRENT_DATETIME $DOCKER_REPO_URL/$SERVICE_NAME:latest
          docker push $DOCKER_REPO_URL/$SERVICE_NAME:$CURRENT_DATETIME
          docker push $DOCKER_REPO_URL/$SERVICE_NAME:latest
          cd ..
        done

        aws eks update-kubeconfig --region $AWS_REGION --name better-wellness-prod
        kubectl apply -f message-service/deployment.yaml -n ${{ env.KUBE_NAMESPACE }}
        kubectl apply -f profile-service/deployment.yaml -n ${{ env.KUBE_NAMESPACE }}
        MESSAGE_LB=$(kubectl get svc message-service -n better-wellness -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        PROFILE_LB=$(kubectl get svc profile-service -n better-wellness -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        sed -i "s|message-service.eu-north-1.elb.amazonaws.com|$MESSAGE_LB|" cloudfront.yaml
        sed -i "s|profile-service.eu-north-1.elb.amazonaws.com|$PROFILE_LB|" cloudfront.yaml
        
        if aws cloudformation describe-stacks --stack-name better-wellness-live-cf --region $AWS_REGION >/dev/null 2>&1; then
          echo "Stack better-wellness-live-cf already exists. Updating the stack."          
        else
          echo "Stack better-wellness-live-cf does not exist. Creating stack..."
          aws cloudformation create-stack --stack-name better-wellness-live-cf --template-body file://cloudfront.yaml --capabilities CAPABILITY_NAMED_IAM --region $AWS_REGION
          aws cloudformation wait stack-create-complete --stack-name better-wellness-live-cf --region $AWS_REGION
        fi
        
        CONFIG_PATH="client-service/src/main/angular/src/assets/config.json"
        MESSAGE_CF=$(aws cloudformation describe-stacks --stack-name better-wellness-live-cf --query "Stacks[0].Outputs[?OutputKey=='MessageServiceCloudFrontURL'].OutputValue" --output text)
        PROFILE_CF=$(aws cloudformation describe-stacks --stack-name better-wellness-live-cf --query "Stacks[0].Outputs[?OutputKey=='ProfileServiceCloudFrontURL'].OutputValue" --output text)
        sed -i "s|http://message-service.eu-north-1.elb.amazonaws.com|$MESSAGE_CF|" $CONFIG_PATH
        sed -i "s|http://profile-service.eu-north-1.elb.amazonaws.com|$PROFILE_CF|" $CONFIG_PATH
        cd client-service/src/main/angular/
        npm install
        npm run build
        cd dist/ng-plus-aws/
        aws s3 cp . s3://better-wellness-live/ --recursive
        


